<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linuxes on 文章中心</title>
    <link>https://lajunta.github.io/hugoblog/linux/</link>
    <description>Recent content in Linuxes on 文章中心</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 29 Jun 2021 16:40:14 +0800</lastBuildDate><atom:link href="https://lajunta.github.io/hugoblog/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Printer Share Using Samba On Ubuntu</title>
      <link>https://lajunta.github.io/hugoblog/linux/sysadmin/samba-printer/</link>
      <pubDate>Tue, 29 Jun 2021 16:40:14 +0800</pubDate>
      
      <guid>https://lajunta.github.io/hugoblog/linux/sysadmin/samba-printer/</guid>
      <description>Printer Share On Ubuntu Edit smb.conf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 [printers] comment = All Printers browseable = no path = /var/spool/samba printable = yes guest ok = no read only = yes create mask = 0700 valid users = dayin [print$] comment = Printer Drivers path = /var/lib/samba/printers browseable = yes read only = yes guest ok = no valid users = dayin Add user dayin 1 2 sudo useradd -M -N -s /bin/false -d /nonexsistent dayin sudo smbpasswd -a dayin Add creditial on windows 1 2 3 ip: server ip user: dayin psd: smbpasswd for dayin </description>
    </item>
    
    <item>
      <title>Wireguard</title>
      <link>https://lajunta.github.io/hugoblog/linux/sysadmin/wireguard/</link>
      <pubDate>Mon, 07 Jun 2021 08:34:10 +0800</pubDate>
      
      <guid>https://lajunta.github.io/hugoblog/linux/sysadmin/wireguard/</guid>
      <description>wireguard Links Archlinux Wireguard Tutorial
VPN Server
配置网络界面 1 ip link add dev wg0 type wireguard 增加IP地址 1 2 3 4 ip address add dev wg0 192.168.88.1/24 # 如果只是二个电脑相联 ip address add dev wg0 192.168.88.1 peer 192.168.88.2 通过配置文件进行配置 1 wg setconf wg0 myconfig.conf 激活界面 1 ip link set up dev wg0 查看显示界面 1 2 3 wg wg show wg showconf 生成钥匙 生成私钥
1 2 umask 077 wg genkey &amp;gt; privatekey 生成公钥</description>
    </item>
    
    <item>
      <title>Suid Sgid Sticky Bit</title>
      <link>https://lajunta.github.io/hugoblog/linux/sysadmin/suid-sgid-sticky-bit/</link>
      <pubDate>Sat, 17 Apr 2021 09:31:33 +0800</pubDate>
      
      <guid>https://lajunta.github.io/hugoblog/linux/sysadmin/suid-sgid-sticky-bit/</guid>
      <description>Linux special directory/file permission setup SUID (+s | numercial code 4) 只有文件的所有者才能执行， 其它人不能执行
1 chmod 4770 file SGID (+s | numercial code 2) 只有组的所有者才能执行，其它人不能执行
1 chmod 2770 file | directory 如果设置在文件上,和suid一样，只有组的成员才能执行 如果设置在目录上,目录内新建的文件都会继承所在目录的组权限 Sticky bit (+t | numercial code 1) 只能加在目录上,目录内的文件,只有其所有者才能删除
1 chmod 1777 file 1 2 [one@server test]$ ls -ld /tmp/ drwxrwxrwt. 15 root root 4096 Sep 28 19:28 /tmp/ </description>
    </item>
    
    <item>
      <title>Samba Guest Write</title>
      <link>https://lajunta.github.io/hugoblog/linux/sysadmin/samba-guest-write/</link>
      <pubDate>Sat, 10 Apr 2021 09:26:46 +0800</pubDate>
      
      <guid>https://lajunta.github.io/hugoblog/linux/sysadmin/samba-guest-write/</guid>
      <description>Samba Server for guest user smb.conf
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 # Global parameters [global] server string = Temp Samba Server netbios name = R33 server role = standalone server map to guest = bad user guest account = zxy create mode = 664 inherit owner=yes inherit permissions=yes [文件收集] path = /var/collect read only = no writeable = yes write list = zxy public = yes guest ok = yes force user = zxy create mask = 0644 directory mask = 1777 File System operations 设置文件或者文件夹 不是文件夹所在组和用户</description>
    </item>
    
    <item>
      <title>Linux Netplan</title>
      <link>https://lajunta.github.io/hugoblog/linux/sysadmin/netplan/</link>
      <pubDate>Tue, 06 Apr 2021 14:17:04 +0800</pubDate>
      
      <guid>https://lajunta.github.io/hugoblog/linux/sysadmin/netplan/</guid>
      <description>Netplan config /etc/netplan/01-netcfg.yaml
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 network: version: 2 renderer: networkd ethernets: enp3s0: dhcp4: no dhcp6: no addresses: [172.16.145.240/24] #gateway4: 172.16.145.254 nameservers: addresses: [172.16.1.2,172.16.145.254] routes: - to: 172.16.144.248/24 via: 172.16.144.254 - to: 172.16.144.249/24 via: 172.16.144.254 - to: 0.0.0.0/0 via: 172.16.145.254 enp5s0: dhcp4: no dhcp6: no addresses: - 192.168.3.254/24 - 192.</description>
    </item>
    
    <item>
      <title>Frpc config</title>
      <link>https://lajunta.github.io/hugoblog/linux/sysadmin/frpc/</link>
      <pubDate>Tue, 06 Apr 2021 14:16:55 +0800</pubDate>
      
      <guid>https://lajunta.github.io/hugoblog/linux/sysadmin/frpc/</guid>
      <description>frpc client config file 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 [common] server_addr = your_public_ip server_port = your_public_port token = your_secret_token tls_enable = true protocol = tcp pool_count = 5 [ssh] type = tcp local_ip = 127.0.0.1 local_port = 22 remote_port = your_public_ssh_port [lab] type = https local_port = 443 subdomain = lab [ku] type = https local_port = 443 custom_domains = your.</description>
    </item>
    
    <item>
      <title>Linux Firewall</title>
      <link>https://lajunta.github.io/hugoblog/linux/sysadmin/firewall/</link>
      <pubDate>Tue, 06 Apr 2021 14:16:44 +0800</pubDate>
      
      <guid>https://lajunta.github.io/hugoblog/linux/sysadmin/firewall/</guid>
      <description>A Firewall 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 iptables -F iptables -t nat -F iptables -X iptables -t filter -N DOCKER iptables -A INPUT -i lo -j ACCEPT iptables -P INPUT DROP iptables -P OUTPUT ACCEPT iptables -P FORWARD ACCEPT iptables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT iptables -A INPUT -p tcp -m multiport --dports 20,25,80,443 -j ACCEPT iptables -A INPUT -p udp -m multiport --dports 8000,8001 -j ACCEPT iptables -A INPUT -p udp -s 114.</description>
    </item>
    
    <item>
      <title>Cerbot </title>
      <link>https://lajunta.github.io/hugoblog/linux/sysadmin/certbot/</link>
      <pubDate>Tue, 06 Apr 2021 14:16:37 +0800</pubDate>
      
      <guid>https://lajunta.github.io/hugoblog/linux/sysadmin/certbot/</guid>
      <description>Certbot setting 安装 certbot 1 2 3 4 5 6 7 sudo apt-get update sudo apt-get install software-properties-common sudo add-apt-repository universe sudo add-apt-repository ppa:certbot/certbot sudo apt-get update sudo apt-get install certbot 手动安装证书 1 sudo certbot certonly --manual --preferred-challenges dns 查看 1 sudo certbot certificates 更新 1 2 sudo certbot renew proxychains sudo certbot certonly --manual --preferred-challenges dns -d &amp;#34;*.qq.com,*.qq.com&amp;#34; 证书位置 1 2 /etc/letsencrypt/live/canbe.top/fullchain.pem /etc/letsencrypt/live/canbe.top/privkey.pem </description>
    </item>
    
    <item>
      <title>Candy V2 Config</title>
      <link>https://lajunta.github.io/hugoblog/linux/sysadmin/caddyv2/</link>
      <pubDate>Tue, 06 Apr 2021 14:16:30 +0800</pubDate>
      
      <guid>https://lajunta.github.io/hugoblog/linux/sysadmin/caddyv2/</guid>
      <description>Caddy Server V2 config 1 2 3 4 5 6 7 8 9 10 11 12 13 https://a.canbe.top { root * /var/www/html encode gzip reverse_proxy 127.0.0.1:9008 tls /etc/letsencrypt/live/canbe.top/fullchain.pem /etc/letsencrypt/live/canbe.top/privkey.pem } https://mpcroom.canbe.top { root * /home/ubuntu/static encode gzip file_server tls /etc/letsencrypt/live/canbe.top/fullchain.pem /etc/letsencrypt/live/canbe.top/privkey.pem } </description>
    </item>
    
    <item>
      <title>Sed 用法</title>
      <link>https://lajunta.github.io/hugoblog/linux/commands/sed/</link>
      <pubDate>Tue, 06 Apr 2021 14:16:20 +0800</pubDate>
      
      <guid>https://lajunta.github.io/hugoblog/linux/commands/sed/</guid>
      <description> 1 find . -type f -exec sed -i &amp;#39;1s;^;---\ntitle: &amp;#34;Test blog&amp;#34;\n---\n;&amp;#39; {} \; 查找并删除所在的行 1 find . -type f -exec sed -i &amp;#39;/^title:/d&amp;#39; {} \; 删除前面N,M行 1 find . -type f -exec sed -i &amp;#39;1,1d&amp;#39; {} \; </description>
    </item>
    
    <item>
      <title>Remove Match Group</title>
      <link>https://lajunta.github.io/hugoblog/linux/commands/remove_match_gruop/</link>
      <pubDate>Tue, 06 Apr 2021 14:16:04 +0800</pubDate>
      
      <guid>https://lajunta.github.io/hugoblog/linux/commands/remove_match_gruop/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #!/bin/bash if [[ $1 == &amp;#34;&amp;#34; || $2 == &amp;#34;&amp;#34; ]] ; then echo &amp;#34;格式为: addgroup.sh 名称 编号&amp;#34; exit 0 fi gname=$1$2 gnum=$2 userdel -r $gname rm -rf /home/$gname sed -i &amp;#34;/$gname/d&amp;#34; /etc/vsftpd.chroot_list sed -i &amp;#34;/$gname/d&amp;#34; /etc/vsftpd.userlist sitepath=&amp;#34;/etc/apache2/sites-available/$gname.conf&amp;#34; rm $sitepath a2dissite $gname systemctl reload apache2 systemctl reload vsftpd mysql -e &amp;#34;drop database if exists $gname;&amp;#34; mysql -e &amp;#34;revoke ALL PRIVILEGES on $gname.</description>
    </item>
    
    <item>
      <title>生成随机数</title>
      <link>https://lajunta.github.io/hugoblog/linux/commands/gen_random_num/</link>
      <pubDate>Tue, 06 Apr 2021 14:15:57 +0800</pubDate>
      
      <guid>https://lajunta.github.io/hugoblog/linux/commands/gen_random_num/</guid>
      <description>生成随机数 xxd 1 xxd -g 2 -l 64 -p /dev/random | tr -d &amp;#34;\n&amp;#34; openssl 1 openssl passwd -5 -salt xyz &amp;#34;yourpassword&amp;#34; | base64 head 1 cat /dev/urandom | base32 | head -c 64 </description>
    </item>
    
    <item>
      <title>Add Match Group</title>
      <link>https://lajunta.github.io/hugoblog/linux/commands/add_match_group/</link>
      <pubDate>Tue, 06 Apr 2021 14:15:19 +0800</pubDate>
      
      <guid>https://lajunta.github.io/hugoblog/linux/commands/add_match_group/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 #!/bin/bash if [[ $1 == &amp;#34;&amp;#34; || $2 == &amp;#34;&amp;#34; ]] ; then echo &amp;#34;格式为: addgroup.</description>
    </item>
    
    <item>
      <title>Systemctl Timer sample</title>
      <link>https://lajunta.github.io/hugoblog/linux/sysadmin/systemctl_timer/</link>
      <pubDate>Sun, 04 Apr 2021 23:56:54 +0800</pubDate>
      
      <guid>https://lajunta.github.io/hugoblog/linux/sysadmin/systemctl_timer/</guid>
      <description>Systemctl Service and Timer 服务样本 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 [Unit] Description=Your App Service After=network.target [Service] Type=simple User=one WorkingDirectory=/path/to/your/apps Environment=PORT=9009 Environment=USER=someuser Environment=PASSWORD=somepassword Restart=on-failure RestartSec=5s ExecStart=/path/to/your/command [Install] WantedBy=multi-user.target 定时器样本 必须和服务同一名称
1 2 3 4 5 6 7 8 9 10 [Unit] Description=Run certbot twice daily [Timer] OnCalendar=*-*-* 00,12:00:00 RandomizedDelaySec=43200 Persistent=true [Install] WantedBy=timers.target </description>
    </item>
    
  </channel>
</rss>
